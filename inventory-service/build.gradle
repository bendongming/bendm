// https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#howto-customize-dependency-versions
// https://github.com/spring-gradle-plugins/dependency-management-plugin
//ext['spring-data-neo4j.version'] = '4.0.0.RELEASE' // spring-boot并没有管理该依赖。只有spring-boot-starter-data-neo4j

configurations.compile.resolutionStrategy {
    force 'org.springframework.data:spring-data-commons:1.11.0.RELEASE'
}
dependencies {
    compile 'org.springframework.boot:spring-boot-starter'
    compile ('org.springframework.boot:spring-boot-starter-data-rest') {
        exclude module: 'spring-data-commons' // data-rest依赖的 spring-data-commons是1.12.7.RELEASE的，而我使用的spring-data-neo4j是4.0.0.RELEASE的，而其依赖的spring-data-commons是1.11.0.RELEASE的，在1.12.7.RELEASE上无法生成自定义查询方法，两者接口不匹配，具体可查看GraphQueryLookupStrategy甚至会看到这个类本身报错（与spring-data-commons版本不兼容）。通过命令可查看到冲突：C:\chaokunyang\Development\DevProjects\spring-event-sourcing\inventory-service>gradle dI --dependency spring-data-commons。
        // spring-boot插件也会指定org.springframework.data:spring-data-commons:1.12.7.RELEASE。即使在configurations中强制版本为1.11.0.RELEASE也不管用。唯一办法就是再显示加上依赖：compile 'org.springframework.data:spring-data-commons:1.11.0.RELEASE'。三者一起方才能够改变spring-data-commons版本。如果可以的话最好还是升级spring-data-neo4j，使之采用spring-boot的默认版本，把neo4j的配置重写下就可以了。

    }

    compile 'org.springframework.data:spring-data-commons:1.11.0.RELEASE'
    compile 'org.springframework.cloud:spring-cloud-starter-hystrix'
    compile 'org.springframework.data:spring-data-neo4j:4.0.0.RELEASE'
    // 后续需要使用插件把改以来改为 optional， 而不是 compile
    compile 'org.springframework.boot:spring-boot-configuration-processor'
}
